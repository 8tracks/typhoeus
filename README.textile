h1. Typhoeus_curly

This is a fork of "Typhoeus project":http://github.com/pauldix/typhoeus. All credits go to Paul Dix, also please refer to the original project
for the full documentation and licensing information.

This fork exposes certain features available in curl but hidden (and thus unavailable for the developer) by the original Typhoeus API. This fork
may become redundant in the future as the relevant changes will be merged upstream. But for now I've created it to use in my projects, as my pull
requests to Typhoeus went in vain.

h2. NTLM authentication

The major reason to start this fork was the need to perform NTLM authentication in Ruby. Now you can do it via Typhoeus::Easy interface using
the following API.

<pre>
e = Typhoeus::Easy.new
e.auth = {
  :username => 'username',
  :password => 'password',
  :method => Typhoeus::Easy::AUTH_TYPES[:CURLAUTH_NTLM]
}
e.url = "http://example.com/auth_ntlm"
e.method = :get
e.perform
</pre>

h3. Other authentication types

The following authentication types are available:
* CURLAUTH_BASIC
* CURLAUTH_DIGEST
* CURLAUTH_GSSNEGOTIATE
* CURLAUTH_NTLM
* CURLAUTH_DIGEST_IE

h3. Query of available auth types

After the initial request you can get the authentication types available on the server via Typhoues::Easy#auth_methods call. It will return a number
that you'll need to decode yourself, please refer to easy.rb source code to see the numeric values of different auth types.

h2. Verbose debug output

Sometime it's useful to see verbose output from curl. You may now enable it:

<pre>
e = Typhoeus::Easy.new
e.verbose = 1
</pre>

Please note that libcurl prints it's output to the console, so you'll need to run your scripts from the console to see the debug info.